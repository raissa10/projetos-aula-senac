package Testes;

import VisaoCadastros.*;
import ModeloCadastro.Pessoa;
import ControleCadastro.PessoaDB;
import ControleCadastro.EstadoDB;
import ControleCadastro.MunicipioDB;
import ControleCadastro.PaisDB;
import VisaoConsultasCadastro.ConsultaPessoa;
import Principal.Conexao;
import Principal.MetodosGlobais;
import VisaoConsultasCadastro.ConsultaEstado;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Gelvazio
 */
public class CadClienteModelo_1 extends MetodosGlobais {

    EstadoDB estadodb = new EstadoDB();
    MunicipioDB cidadedb = new MunicipioDB();
    PaisDB paisdb = new PaisDB();

    private static final String sqlBuscaNomeCidade = "SELECT * FROM municipio WHERE cd_municipio=? and cd_estado=?";
    private static final String sqlBuscaNomeEstado = "SELECT estado.* FROM estado where estado.cd_estado=?";
    private static final String sqlBuscaNomePais = "SELECT  PAIS.* FROM PAIS where pais.CD_pais=?";
    private static final String sqlBuscaPessoa = "SELECT * FROM PESSOA_SIMPLES WHERE cd_pessoa=?";

    /**
     * Creates new form CadPessoa
     */
    public CadClienteModelo_1() {
        initComponents();
        edtCodigo.grabFocus();
        Centro();
        habilitaCampos(false);

    }

    public void habilitaCampos(boolean habilita) {
        edtCodigo.requestFocus();
        edtCodigo.setEnabled(!habilita);
        edtCPF.setEnabled(habilita);
        edtNome.setEnabled(habilita);
        edtEndereco.setEnabled(habilita);
        edtBairro.setEnabled(habilita);
        edtNumero.setEnabled(habilita);
        edtCodigoEstado.setEnabled(habilita);
        cbEstado.setEnabled(habilita);
        edtCodigoCidade.setEnabled(habilita);
        cbCidade.setEnabled(habilita);
        edtCodigoPais.setEnabled(habilita);
        cbPais.setEnabled(habilita);
        btnLocalizaCidade.setEnabled(habilita);
        btnLocalizaEstado.setEnabled(habilita);
        btnLocalizaPais.setEnabled(habilita);
        edtTelefone.setEnabled(habilita);
        edtCEP.setEnabled(habilita);
        edtEmail.setEnabled(habilita);

        btnGravar.setEnabled(habilita);
        btnCancelar.setEnabled(habilita);
        btnConsulta.setEnabled(!habilita);
        btnExcluir.setEnabled(habilita);

        if (habilita) {
            edtCodigo.requestFocus();
        } else {
            LimpaTela();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        edtCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        edtNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        edtEmail = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        edtEndereco = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        edtNumero = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        edtCEP = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        edtCPF = new javax.swing.JTextField();
        edtTelefone = new javax.swing.JTextField();
        btnLocalizaCidade = new javax.swing.JButton();
        btnLocalizaPais = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        edtCodigoEstado = new javax.swing.JTextField();
        edtCodigoCidade = new javax.swing.JTextField();
        edtCodigoPais = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnLocalizaEstado = new javax.swing.JButton();
        cbEstado = new javax.swing.JComboBox();
        cbCidade = new javax.swing.JComboBox();
        cbPais = new javax.swing.JComboBox();
        edtBairro = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        btnGravar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnConsulta = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();

        setTitle("Cadastro de Pessoa");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Código:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 70, -1));

        edtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCodigoKeyPressed(evt);
            }
        });
        jPanel4.add(edtCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(88, 11, 70, 30));

        jLabel2.setText("Nome:");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 70, -1));

        edtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtNomeKeyPressed(evt);
            }
        });
        jPanel4.add(edtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 330, 30));

        jLabel4.setText("E-mail:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 500, 70, -1));

        edtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtEmailKeyPressed(evt);
            }
        });
        jPanel4.add(edtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 490, 330, 30));

        jLabel6.setText("Endereço:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 70, -1));

        jLabel8.setText("Telefone:");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 70, -1));

        jLabel9.setText("Numero:");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 140, -1, -1));

        edtEndereco.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtEnderecoKeyPressed(evt);
            }
        });
        jPanel4.add(edtEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 330, 30));

        jLabel10.setText("Bairro:");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 70, -1));

        edtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtNumeroKeyPressed(evt);
            }
        });
        jPanel4.add(edtNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 130, 70, 30));

        jLabel13.setText("CEP:");
        jPanel4.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 70, -1));

        edtCEP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCEPKeyPressed(evt);
            }
        });
        jPanel4.add(edtCEP, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 450, 100, 30));

        jLabel14.setText("CPF /CNPJ:");
        jPanel4.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 20, -1, -1));

        edtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCPFKeyPressed(evt);
            }
        });
        jPanel4.add(edtCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 180, 30));

        edtTelefone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtTelefoneKeyPressed(evt);
            }
        });
        jPanel4.add(edtTelefone, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 410, 330, 30));

        btnLocalizaCidade.setText("Consulta Cidade");
        btnLocalizaCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizaCidadeActionPerformed(evt);
            }
        });
        btnLocalizaCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLocalizaCidadeKeyPressed(evt);
            }
        });
        jPanel4.add(btnLocalizaCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 250, 120, 30));

        btnLocalizaPais.setText("Consulta País");
        btnLocalizaPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizaPaisActionPerformed(evt);
            }
        });
        btnLocalizaPais.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLocalizaPaisKeyPressed(evt);
            }
        });
        jPanel4.add(btnLocalizaPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, 120, 30));

        jLabel18.setText("Nome Estado:");
        jPanel4.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 220, 70, -1));

        jLabel19.setText("Nome Cidade:");
        jPanel4.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 70, -1));

        edtCodigoEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCodigoEstadoKeyPressed(evt);
            }
        });
        jPanel4.add(edtCodigoEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 170, 55, 30));
        edtCodigoEstado.getAccessibleContext().setAccessibleName("");

        edtCodigoCidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCodigoCidadeKeyPressed(evt);
            }
        });
        jPanel4.add(edtCodigoCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 55, 30));
        edtCodigoCidade.getAccessibleContext().setAccessibleName("");

        edtCodigoPais.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtCodigoPaisKeyPressed(evt);
            }
        });
        jPanel4.add(edtCodigoPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 55, 30));
        edtCodigoPais.getAccessibleContext().setAccessibleName("");

        jLabel20.setText("Nome País:");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 70, -1));

        jLabel3.setText("Cód.Cidade:");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 70, -1));

        jLabel5.setText("Cód País:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 60, -1));

        jLabel7.setText("Cód.Estado:");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 70, -1));

        btnLocalizaEstado.setText("Consulta Estado");
        btnLocalizaEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizaEstadoActionPerformed(evt);
            }
        });
        btnLocalizaEstado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnLocalizaEstadoKeyPressed(evt);
            }
        });
        jPanel4.add(btnLocalizaEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 170, 120, 30));

        cbEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbEstadoActionPerformed(evt);
            }
        });
        jPanel4.add(cbEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 330, 30));

        cbCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCidadeActionPerformed(evt);
            }
        });
        jPanel4.add(cbCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 330, 30));

        cbPais.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPaisActionPerformed(evt);
            }
        });
        jPanel4.add(cbPais, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 370, 330, 30));

        edtBairro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                edtBairroKeyPressed(evt);
            }
        });
        jPanel4.add(edtBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 190, 30));

        jTabbedPane1.addTab("Cadastro", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 450, 570));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setText("Cadastro de Pessoas");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 0, -1, -1));

        btnGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Faturamento/Knob Valid Green.png"))); // NOI18N
        btnGravar.setText("Gravar");
        btnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravarActionPerformed(evt);
            }
        });
        btnGravar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnGravarKeyPressed(evt);
            }
        });
        getContentPane().add(btnGravar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 120, 40));

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Faturamento/Knob Cancel.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        btnCancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnCancelarKeyPressed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 80, 120, 40));

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Faturamento/Knob Remove Red.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        btnExcluir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnExcluirKeyPressed(evt);
            }
        });
        getContentPane().add(btnExcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 130, 120, 40));

        btnConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Faturamento/Knob Search.png"))); // NOI18N
        btnConsulta.setText("Consulta");
        btnConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultaActionPerformed(evt);
            }
        });
        btnConsulta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                btnConsultaKeyPressed(evt);
            }
        });
        getContentPane().add(btnConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 180, 120, 40));

        btnSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Faturamento/Knob Red.png"))); // NOI18N
        btnSair.setText("Sair");
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });
        getContentPane().add(btnSair, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, 120, 40));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LimpaTela() {
        edtCodigo.setText("");
        edtCPF.setText("");
        edtNome.setText("");
        edtEndereco.setText("");
        edtBairro.setText("");
        edtNumero.setText("");
        edtCodigoCidade.setText("");
        edtCodigoEstado.setText("");
        edtCodigoPais.setText("");
        edtTelefone.setText("");
        edtCEP.setText("");
        edtEmail.setText("");
        edtCodigo.grabFocus();

        cbCidade.removeAllItems();
        cbEstado.removeAllItems();
        cbPais.removeAllItems();
    }

    private void LimpaTelaMenosCodigo() {
        edtCPF.setText("");
        edtNome.setText("");
        edtEndereco.setText("");
        edtNumero.setText("");
        edtNumero.setText("");
        edtCodigoCidade.setText("");
        edtCodigoEstado.setText("");
        edtCodigoPais.setText("");
        edtTelefone.setText("");
        edtCEP.setText("");
        edtEmail.setText("");
        edtCodigo.grabFocus();
    }

    public DefaultComboBoxModel ValidaCampoCodigoEstadoNaoNulo() {
        EstadoDB estadodb = new EstadoDB();
        String cd_estado = edtCodigoEstado.getText();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        if (estadodb.getEstado(cd_estado)) {
            try {
                conn = Conexao.getConexao();
                pstmt = conn.prepareStatement(sqlBuscaNomeEstado);
                pstmt.setString(1, cd_estado);
                rs = pstmt.executeQuery();
                while (rs.next()) {
                    String auxNome = rs.getString("ds_estado");
                    cbEstado.setSelectedItem(auxNome);
                    edtCodigoCidade.grabFocus();
                }
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Erro no sql, ValidaCampoCodigoEstadoNaoNulo(): \n" + erro.getMessage());
            } finally {
                Conexao.closeAll(conn);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Estado nao cadastrado!");
            edtCodigoEstado.requestFocus();
        }
        return modelo;
    }

    public DefaultComboBoxModel ValidaCampoCodigoCidadeNaoNulo() {
        String auxTexto = edtCodigoCidade.getText();
        int cd_municipio = Integer.parseInt(auxTexto);
        String auxcd_estado = edtCodigoEstado.getText();

        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        if (cidadedb.getCidade(auxcd_estado, cd_municipio)) {
            try {
                conn = Conexao.getConexao();
                pstmt = conn.prepareStatement(sqlBuscaNomeCidade);
                pstmt.setInt(1, cd_municipio);
                pstmt.setString(2, auxcd_estado);
                rs = pstmt.executeQuery();
                while (rs.next()) {
                    String auxNome = rs.getString("ds_municipio");
                    cbCidade.setSelectedItem(auxNome);
                    edtCodigoPais.grabFocus();
                }
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Erro no sql, ValidaCampoCodigoCidadeNaoNulo(): \n" + erro.getMessage());
            } finally {
                Conexao.closeAll(conn);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cidade nao cadastrada");
            edtCodigoCidade.requestFocus();
        }
        return modelo;
    }

    public DefaultComboBoxModel ValidaCampoCodigoPaisNaoNulo() {
        String auxTexto = edtCodigoPais.getText();
        int cd_pais = Integer.parseInt(auxTexto);

        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        if (paisdb.getPais(cd_pais)) {
            try {
                conn = Conexao.getConexao();
                pstmt = conn.prepareStatement(sqlBuscaNomePais);
                pstmt.setInt(1, cd_pais);
                rs = pstmt.executeQuery();
                while (rs.next()) {
                    String auxNome = rs.getString("nm_pais");
                    cbPais.setSelectedItem(auxNome);
                    edtTelefone.grabFocus();
                }
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Erro no sql, ValidaCampoCodigoPaisNaoNulo(): \n" + erro.getMessage());
            } finally {
                Conexao.closeAll(conn);
            }
        } else {
            JOptionPane.showMessageDialog(null, "País nao cadastrado!");
            edtCodigoPais.requestFocus();
        }
        return modelo;
    }

    public void ComboBoxEstado() {
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
        String sql
                = "SELECT                "
                + "    ESTADO.*          "
                + "FROM                  "
                + "     ESTADO           "
                + "WHERE                 "
                + "    ESTADO.DS_ESTADO='" + cbEstado.getSelectedItem() + "'";
        try {
            conn = Conexao.getConexao();
            stmt = conn.createStatement();
            rs = stmt.executeQuery(sql);
            rs.next();
            String auxcd_estado = rs.getString("cd_estado");

            edtCodigoEstado.setText(auxcd_estado);
            edtCodigoEstado.setVisible(true);
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "Estado não encontrado!Erro na funcao ComboBoxEstado()!:" + ex.getMessage());
        }
    }

    public void ComboBoxCidade() {
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
        String sql
                = "SELECT                      "
                + "    MUNICIPIO.*             "
                + "FROM                        "
                + "    MUNICIPIO               "
                + "WHERE                       "
                + "    MUNICIPIO.DS_MUNICIPIO='" + cbCidade.getSelectedItem() + "'";
        try {
            conn = Conexao.getConexao();
            stmt = conn.createStatement();
            rs = stmt.executeQuery(sql);
            rs.next();
            int auxcd_municipio = rs.getInt("cd_municipio");
            String aux = "";
            aux = "" + auxcd_municipio;
            edtCodigoCidade.setText(aux);
            edtCodigoCidade.setVisible(true);
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "Cidade não encontrada!Erro na funcao ComboBoxCidade()!:" + ex.getMessage());
        }
    }

    public void ComboBoxPais() {
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
        String sql
                = "SELECT            "
                + "    PAIS.*        "
                + "FROM              "
                + "    PAIS          "
                + "WHERE             "
                + "    PAIS.NM_PAIS='" + cbPais.getSelectedItem() + "'";
        try {
            conn = Conexao.getConexao();
            stmt = conn.createStatement();
            rs = stmt.executeQuery(sql);
            rs.next();
            int auxcd_pais = rs.getInt("cd_pais");
            String aux = "";
            aux = "" + auxcd_pais;
            edtCodigoPais.setText(aux);
            edtCodigoPais.setVisible(true);
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "Pais não encontrado!Erro na funcao ComboBoxPais()!:" + ex.getMessage());
        }
    }

    private void GravarCompletoValidado() {
        //Validado apenas os campos NOT NULL  do banco de dados        
        String auxTexto = edtCodigo.getText();
        String auxCPF = edtCPF.getText();
        String auxNome = edtNome.getText();

        if (auxTexto.equals("")) {
            JOptionPane.showMessageDialog(null, "Favor Preencher o Código da Pessoa!");
            edtCodigo.grabFocus();
        } else if (auxCPF.equals("")) {
            JOptionPane.showMessageDialog(null, "Favor Preencher o CPF da Pessoa!");
            edtCPF.grabFocus();
        } else if (auxNome.equals("")) {
            JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
            edtNome.grabFocus();
        } else {
            GravarAlterarRegistro();

            /*if (auxBairro.equals("")) {
             JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
             edtBairro.grabFocus();
             } else if (auxCodigoCidade.equals("")) {
             JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
             edtCodigoCidade.grabFocus();
             } else if (auxCodigoEstado.equals("")) {
             JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
             edtCodigoEstado.grabFocus();
             } else if (auxCodigoPais.equals("")) {
             JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
             edtCodigoPais.grabFocus();
             } else if (auxTelefone.equals("")) {
             JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
             edtTelefone.grabFocus();
             } else if (auxCEP.equals("")) {
             JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
             edtCEP.grabFocus();
             } else if (auxEmail.equals("")) {
             JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
             edtEmail.grabFocus();
             } else if (auxNumero.equals("")) {
             JOptionPane.showMessageDialog(null, "Favor Preencher o Nome da Pessoa!");
             edtEmail.grabFocus();
             } else {
             */
        }
    }

    private void GravarAlterarRegistro() {
        //Deve ser feita toda a validacao de banco de dados nesta parte
        String auxTexto = edtCodigo.getText();
        int codigo = Integer.parseInt(auxTexto);
        PessoaDB pessoadb = new PessoaDB();
        if (pessoadb.getPessoa(codigo)) {
            //AlterarRegistro();
        } else {
            //GravarRegistro();
        }
    }

    private void ExcluirRegistro() {
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente excluir o registro?");
        if (resposta == JOptionPane.YES_OPTION) {
            PessoaDB pessoadb = new PessoaDB();
            int auxCodigo = Integer.parseInt(edtCodigo.getText());
            if (pessoadb.excluirPessoa(auxCodigo)) {
                JOptionPane.showMessageDialog(null, "Exclusão efetuada com sucesso!");
            } else {
                JOptionPane.showMessageDialog(null, "Não foi possivel excluir o registro!!");

            }
        }
        habilitaCampos(false);
        LimpaTela();
    }
    /*
     private void GravarRegistro() {
     String auxTexto = edtCodigo.getText();
     String auxCPF = edtCPF.getText();
     String auxNome = edtNome.getText();
     String auxEndereco = edtEndereco.getText();
     String auxNumero = edtNumero.getText();
     String auxBairro = edtBairro.getText();
     int auxCodigoCidade = Integer.parseInt(edtCodigoCidade.getText());
     String auxCodigoEstado = edtCodigoEstado.getText();
     int auxCodigoPais = Integer.parseInt(edtCodigoPais.getText());
     String auxTelefone = edtTelefone.getText();
     String auxCEP = edtCEP.getText();
     String auxEmail = edtEmail.getText();

     if (auxEmail.equals("")) {
     auxEmail = null;
     }

     int CD_USUARIO = 1;//= Integer.parseInt(login.getCodigo());
     int CD_FILIAL = 1;//Integer.parseInt(login.getFilial());

     PessoaDB pessoadb = new PessoaDB();
     int auxCodigo = Integer.parseInt(auxTexto);
     Pessoa pessoa = new Pessoa(
     auxCodigoCidade,
     auxCodigoPais,
     auxNome,
     auxEndereco,
     auxNumero,
     auxBairro,
     auxCodigoEstado,
     auxCEP,
     auxEmail,
     auxTelefone,
     auxCPF,
     CD_USUARIO,
     auxCodigo,
     CD_FILIAL
     );
     if (pessoadb.inserirPessoa(pessoa)) {
     JOptionPane.showMessageDialog(null, "Registro incluído com sucesso!");
     LimpaTela();
     } else {
     JOptionPane.showMessageDialog(null, "Não foi possível incluir o registro!");
     edtCodigo.grabFocus();
     }
     }

     private void AlterarRegistro() {
     String auxCPF = edtCPF.getText();
     String auxNome = edtNome.getText();
     String auxEndereco = edtEndereco.getText();
     String auxNumero = edtNumero.getText();
     String auxBairro = edtBairro.getText();
     String auxCodigoEstado = edtCodigoEstado.getText();
     String auxTelefone = edtTelefone.getText();
     String auxCEP = edtCEP.getText();
     String auxEmail = edtEmail.getText();
     int auxCodigoPais = Integer.parseInt(edtCodigoPais.getText());
     int auxCodigo = Integer.parseInt(edtCodigo.getText());
     int auxCodigoCidade = Integer.parseInt(edtCodigoCidade.getText());
     //JOptionPane.showMessageDialog(null, "Codigo do Usuario Logado:  " + ologin.getCodigo());
     int CD_USUARIO = 1;
     int CD_FILIAL = 1;
     PessoaDB pessoadb = new PessoaDB();
     Pessoa pessoa = new Pessoa(
     auxCodigoCidade,
     auxCodigoPais,
     auxNome,
     auxEndereco,
     auxNumero,
     auxBairro,
     auxCodigoEstado,
     auxCEP,
     auxEmail,
     auxTelefone,
     auxCPF,
     CD_USUARIO,
     auxCodigo,
     CD_FILIAL);
     if (pessoadb.alterarPessoa(pessoa)) {
     JOptionPane.showMessageDialog(null, "Registro alterado com sucesso!");
     habilitaCampos(false);
     } else {
     JOptionPane.showMessageDialog(null, "Não foi possível alterar o registro!");
     }
     }
     */

    private void ValidaCodigoGenerator() {
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
        try {
            conn = Conexao.getConexao();
            stmt = conn.createStatement();
            rs = stmt.executeQuery("SELECT GEN_ID(CD_PESSOA, 1) FROM RDB$DATABASE");
            while (rs.next()) {
                int auxCodigoGenerator = rs.getInt("GEN_ID");
                int auxCodigo = auxCodigoGenerator + 1;
                String a;
                a = "" + auxCodigo;
                edtCodigo.setText(a);
                edtCPF.grabFocus();
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "Erro de conexão! \n" + erro.getMessage());
        } finally {
            Conexao.closeAll(conn);
        }
    }

    private void ValidaCampoCodigoNãoNulo() {
        Connection conn = null;
        PreparedStatement pstmt = null;
        ResultSet rs = null;
        PessoaDB pessoadb = new PessoaDB();
        int cd_pessoa = Integer.parseInt(edtCodigo.getText());
        if (pessoadb.getPessoa(cd_pessoa)) {
            //Habilitação dos campos
            habilitaCampos(true);

            //Combobox Estado
            cbEstado.setModel(estadodb.getComboboxPessoaEstado());
            ComboBoxEstado();

            //Combobox Cidade
            cbCidade.setModel(cidadedb.getComboCidade());
            ComboBoxCidade();

            //Combobox Pais
            cbPais.setModel(paisdb.getComboPais());
            ComboBoxPais();
            try {
                conn = Conexao.getConexao();
                pstmt = conn.prepareStatement(sqlBuscaPessoa);
                pstmt.setInt(1, cd_pessoa);
                rs = pstmt.executeQuery();
                while (rs.next()) {
                    //Conversão das variaveis para String
                    int auxCD_CIDADE = rs.getInt("CD_CIDADE");
                    String auxCD_CIDADE_String = "";
                    auxCD_CIDADE_String = "0" + auxCD_CIDADE;
                    int auxCD_PAIS = rs.getInt("CD_PAIS");
                    String auxCD_PAIS_String = null;
                    auxCD_PAIS_String = "0" + auxCD_PAIS;
                    //Campos String
                    //NÃO DEIXAR ESPAÇOS!!!!!!
                    String auxNM_PESSOA = rs.getString("NM_PESSOA");
                    String auxDS_ENDERECO = rs.getString("DS_ENDERECO");
                    String auxNR_ENDERECO = rs.getString("NR_ENDERECO");
                    String auxDS_BAIRRO = rs.getString("DS_BAIRRO");
                    String auxCD_ESTADO = rs.getString("CD_ESTADO");
                    String auxCD_CEP = rs.getString("CD_CEP");
                    String auxDS_EMAIL = rs.getString("DS_EMAIL");
                    String auxNR_TELEFONE = rs.getString("NR_TELEFONE");
                    String auxCD_CGCCPF = rs.getString("CD_CGCCPF");

                    edtCodigoCidade.setText(auxCD_CIDADE_String);
                    edtCodigoPais.setText(auxCD_PAIS_String);
                    edtNome.setText(auxNM_PESSOA);
                    edtEndereco.setText(auxDS_ENDERECO);
                    edtNumero.setText(auxNR_ENDERECO);
                    edtBairro.setText(auxDS_BAIRRO);
                    edtCodigoEstado.setText(auxCD_ESTADO);
                    edtCEP.setText(auxCD_CEP);
                    edtEmail.setText(auxDS_EMAIL);
                    edtTelefone.setText(auxNR_TELEFONE);
                    edtCPF.setText(auxCD_CGCCPF);
                    edtCPF.grabFocus();

                    //Validacao dos combobox da tela
                    ValidaCampoCodigoCidadeNaoNulo();
                    ValidaCampoCodigoEstadoNaoNulo();
                    ValidaCampoCodigoPaisNaoNulo();
                }
            } catch (SQLException erro) {
                JOptionPane.showMessageDialog(null, "Erro de conexão no Método ValidaCampoCodigoNãoNulo()! " + erro.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pessoa não Cadastrada!");
            LimpaTelaMenosCodigo();
            edtCodigo.requestFocus();
        }
    }

    private void btnLocalizaCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizaCidadeActionPerformed
        // TODO add your handling code here:
        ConsultaEstado formulario = new ConsultaEstado(edtCodigoEstado);
        this.getDesktopPane().add(formulario);
        formulario.setVisible(true);
    }//GEN-LAST:event_btnLocalizaCidadeActionPerformed

    private void btnLocalizaPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizaPaisActionPerformed
        /*/ TODO add your handling code here:
         ConsultaPaises form = new ConsultaPaises(edtCodigoPais, edtNomePais);
         this.getDesktopPane().add(form);
         form.setVisible(true);
         */

    }//GEN-LAST:event_btnLocalizaPaisActionPerformed

    private void edtCodigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCodigoKeyPressed
        // TODO add your handling code here:
        String auxTexto = edtCodigo.getText();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (auxTexto.equals("")) {
                ValidaCodigoGenerator();
                //Habilitação dos campos
                habilitaCampos(true);

                //Dados dos Combobox
                EstadoDB estadodb = new EstadoDB();
                MunicipioDB cidadedb = new MunicipioDB();
                PaisDB paisdb = new PaisDB();
                //Combobox Estado
                cbEstado.setModel(estadodb.getComboboxPessoaEstado());
                ComboBoxEstado();

                //Combobox Cidade
                cbCidade.setModel(cidadedb.getComboCidade());
                ComboBoxCidade();

                //Combobox Pais
                cbPais.setModel(paisdb.getComboPais());
                ComboBoxPais();

            } else {
                ValidaCampoCodigoNãoNulo();
            }
        }
    }//GEN-LAST:event_edtCodigoKeyPressed

    private void edtCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCPFKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            edtNome.grabFocus();
        }
    }//GEN-LAST:event_edtCPFKeyPressed

    private void edtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtNomeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            edtEndereco.grabFocus();
        }
    }//GEN-LAST:event_edtNomeKeyPressed

private void edtEnderecoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtEnderecoKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        edtNumero.grabFocus();
    }
}//GEN-LAST:event_edtEnderecoKeyPressed

private void edtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtNumeroKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        edtCodigoEstado.grabFocus();
    }
}//GEN-LAST:event_edtNumeroKeyPressed

private void edtCodigoCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCodigoCidadeKeyPressed
    String auxTexto = edtCodigoEstado.getText();
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (auxTexto.equals("")) {
            JOptionPane.showMessageDialog(null, "Código da Cidade nulo!");
            edtCodigoEstado.requestFocus();
        } else {
            ValidaCampoCodigoCidadeNaoNulo();
        }
    }
}//GEN-LAST:event_edtCodigoCidadeKeyPressed

private void edtCodigoPaisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCodigoPaisKeyPressed
// TODO add your handling code here:
    String auxTexto = edtCodigoEstado.getText();
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        if (auxTexto.equals("")) {
            JOptionPane.showMessageDialog(null, "Código do País nulo!");
            edtCodigoEstado.requestFocus();
        } else {
            ValidaCampoCodigoPaisNaoNulo();
        }
    }
}//GEN-LAST:event_edtCodigoPaisKeyPressed

private void btnLocalizaPaisKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLocalizaPaisKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        edtTelefone.grabFocus();
    }
}//GEN-LAST:event_btnLocalizaPaisKeyPressed

private void edtTelefoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtTelefoneKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        edtCEP.grabFocus();
    }
}//GEN-LAST:event_edtTelefoneKeyPressed

private void edtCEPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCEPKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        edtEmail.grabFocus();
    }
}//GEN-LAST:event_edtCEPKeyPressed

private void edtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtEmailKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        btnGravar.grabFocus();
    }
}//GEN-LAST:event_edtEmailKeyPressed

    private void btnLocalizaEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizaEstadoActionPerformed
        /* TODO add your handling code here:
         ConsultaPaises form = new ConsultaPaises(edtCodigoPais, edtNomePais);
         this.getDesktopPane().add(form);
         form.setVisible(true);
         */
    }//GEN-LAST:event_btnLocalizaEstadoActionPerformed

    private void btnLocalizaEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLocalizaEstadoKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            edtCodigoCidade.grabFocus();
        }
    }//GEN-LAST:event_btnLocalizaEstadoKeyPressed

    private void edtCodigoEstadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtCodigoEstadoKeyPressed
        // TODO add your handling code here:
        String auxTexto = edtCodigoEstado.getText();
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (auxTexto.equals("")) {
                JOptionPane.showMessageDialog(null, "Codigo do Estado nulo!");
                edtCodigoEstado.requestFocus();
            } else {
                ValidaCampoCodigoEstadoNaoNulo();
            }
        }
    }//GEN-LAST:event_edtCodigoEstadoKeyPressed

    private void btnLocalizaCidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnLocalizaCidadeKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            edtCodigoPais.grabFocus();
        }
    }//GEN-LAST:event_btnLocalizaCidadeKeyPressed

    private void btnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravarActionPerformed
        // TODO add your handling code here:
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente gravar o registro?");
        if (resposta == JOptionPane.YES_OPTION) {
            GravarCompletoValidado();
        }
    }//GEN-LAST:event_btnGravarActionPerformed

    private void btnGravarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnGravarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnCancelar.grabFocus();
        }
    }//GEN-LAST:event_btnGravarKeyPressed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        int resposta = JOptionPane.showConfirmDialog(null, "Deseja realmente Cancelar a Edição?");
        if (resposta == JOptionPane.YES_OPTION) {
            habilitaCampos(false);
            LimpaTela();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnCancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnCancelarKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnExcluir.grabFocus();
        }
    }//GEN-LAST:event_btnCancelarKeyPressed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        ExcluirRegistro();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnExcluirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnExcluirKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnConsulta.grabFocus();
        }
    }//GEN-LAST:event_btnExcluirKeyPressed

    private void btnConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultaActionPerformed
        ConsultaPessoa form = new ConsultaPessoa(edtCodigo);
        this.getDesktopPane().add(form);
        form.setVisible(true);
        edtCodigo.grabFocus();
    }//GEN-LAST:event_btnConsultaActionPerformed

    private void btnConsultaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_btnConsultaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btnSair.grabFocus();
        }
    }//GEN-LAST:event_btnConsultaKeyPressed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void cbEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbEstadoActionPerformed
        // TODO add your handling code here:
        ComboBoxEstado();
    }//GEN-LAST:event_cbEstadoActionPerformed

    private void cbCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCidadeActionPerformed
        // TODO add your handling code here:
        ComboBoxCidade();
    }//GEN-LAST:event_cbCidadeActionPerformed

    private void cbPaisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPaisActionPerformed
        // TODO add your handling code here:
        ComboBoxPais();
    }//GEN-LAST:event_cbPaisActionPerformed

    private void edtBairroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_edtBairroKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_edtBairroKeyPressed

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CadClienteModelo_1().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConsulta;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnGravar;
    private javax.swing.JButton btnLocalizaCidade;
    private javax.swing.JButton btnLocalizaEstado;
    private javax.swing.JButton btnLocalizaPais;
    private javax.swing.JButton btnSair;
    private javax.swing.JComboBox cbCidade;
    private javax.swing.JComboBox cbEstado;
    private javax.swing.JComboBox cbPais;
    private javax.swing.JTextField edtBairro;
    private javax.swing.JTextField edtCEP;
    private javax.swing.JTextField edtCPF;
    private javax.swing.JTextField edtCodigo;
    private javax.swing.JTextField edtCodigoCidade;
    private javax.swing.JTextField edtCodigoEstado;
    private javax.swing.JTextField edtCodigoPais;
    private javax.swing.JTextField edtEmail;
    private javax.swing.JTextField edtEndereco;
    private javax.swing.JTextField edtNome;
    private javax.swing.JTextField edtNumero;
    private javax.swing.JTextField edtTelefone;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
}
